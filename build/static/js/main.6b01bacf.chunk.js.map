{"version":3,"sources":["components/Footer.tsx","features/app/atom.ts","apis/index.ts","apis/movieApi.ts","features/movie/useMovieSearch.ts","hooks/useClickOutside.ts","components/Header.tsx","components/Slider.tsx","features/movie/upcoming/useUpcomingMovie.ts","components/Card.tsx","features/movie/upcoming/index.tsx","features/movie/latest/useLatestMovie.ts","features/movie/latest/index.tsx","features/movie/nowPlaying/useNowPlayingMovie.ts","features/movie/nowPlaying/index.tsx","features/movie/popular/usePopularMovie.ts","features/movie/popular/index.tsx","features/movie/topRate/useTopRateMovie.ts","features/movie/topRate/index.tsx","pages/MainPage.tsx","features/movie/useMovieDetail.ts","features/movie/detail/DefaultInfo.tsx","features/movie/useMovieSimilar.ts","features/movie/detail/Similar.tsx","pages/MovieDetail.tsx","apis/tvApi.ts","features/tv/airingToday/useAiringTodayTv.ts","features/tv/airingToday/index.tsx","features/tv/onTheAir/useOnTheAirTv.ts","features/tv/onTheAir/index.tsx","features/tv/latest/useLatestTv.ts","features/tv/latest/index.tsx","features/tv/popular/usePopularTv.ts","features/tv/popular/index.tsx","features/tv/topRate/useTopRateTv.ts","features/tv/topRate/index.tsx","pages/TvPage.tsx","features/tv/useTvDetail.ts","features/tv/detail/DefaultInfo.tsx","features/tv/useTvSimilar.ts","features/tv/detail/Similar.tsx","pages/TvDetail.tsx","components/Portal.tsx","components/Modal.tsx","features/app/LoginModal.tsx","features/app/SignupModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Base","styled","footer","Section","section","Statistics","Summary","span","Emphasis","em","Container","ContentWrapper","div","Left","TermsAndPolicy","ul","TermsAndPolicyItem","li","Right","Footer","loginModalOpenState","atom","key","default","signupModalOpenState","axiosInstance","axios","create","baseURL","process","params","api_key","language","latestApi","get","upcomingApi","nowPlayingApi","topRatedApi","popularApi","useMovieSearch","query","useQuery","searchApi","enabled","Boolean","isLoading","isError","data","useOnClickOutside","ref","callback","useEffect","listener","e","current","contains","target","document","addEventListener","removeEventListener","Navigation","MenuListWrapper","MenuList","Menu","MenuButton","active","SearchMenu","Link","TextLogo","SearchContainer","SearchResultWrapper","SearchResultListItem","SearchResultList","SearchFormWrapper","SearchForm","SearchLabel","SearchInput","SignIn","SignUp","Header","searchRef","useRef","pathname","window","location","useState","searchKeyword","setSearchKeyword","useRecoilState","isLoginModalOpen","setIsLoginModalOpen","isSignupModalOpen","setIsSignupModalOpen","useClickOutside","searchResult","href","className","placeholder","onChange","value","results","map","searchResultItem","id","title","onClick","ArrowButton","button","pos","css","DEFAULT_SETTINGS","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","swipe","draggable","prevArrow","nextArrow","Slider","settings","children","useLatestMovie","StyledLink","ImageWrapper","Image","img","Info","Title","h4","Keyword","Average","Card","linkUrl","posterPath","voteAverage","year","to","src","alt","UpcomingMovieSection","useUpcomingMovie","upcomingMovieResponse","movie","poster_path","vote_average","release_date","split","LatestMovieSection","latestMovieResponse","useNowPlayingMovie","nowPlayingMovieResponse","usePopularMovie","PopularMovieSection","popularMovieResponse","useTopRateMovie","topRateMovieResponse","Main","main","MainPage","useMovieDetail","movieId","ContentSection","ContentHeaderWrapper","ContentHeader","header","a","ContentTitle","h2","MoreSee","DefaultInfo","genres","runtime","overview","hour","Math","ceil","minute","useSimilarMovie","similarApi","ContentsWrapper","CardContainer","PosterWrapper","Poster","VoteAverage","Similar","result","TopInfo","PosterContainer","Backdrop","LeftBlur","RightBlur","LeftGradient","RightGradient","BackdropImage","imageUrl","h1","AverageRate","Actions","StarRate","StarRateText","RatingWrapper","Divider","ActionButtonContainer","ActionButton","BottomInfo","ContentSectionContainer","MovieDetail","useParams","useMemo","genre","name","join","backdrop_path","vote_count","Rating","size","airingTodayApi","onTheAirApi","useAiringTodayTv","AiringTodayTvSection","airingTodayTvResponse","tv","first_air_date","useOnTheAirTv","OnTheAirTvSection","onTheAirTvResponse","LatestTvSection","useLatestTv","latestTvResponse","usePopularTv","PopularTvSection","popularTvResponse","useTopRateTv","TopRateTvSection","TvPage","useTvDetail","detailApi","useSimilarTv","useTvSimilar","TvDetail","Portal","selector","rootElement","querySelector","createPortal","Overlay","Dim","Modal","isOpen","onClose","CSSTransition","in","timeout","classNames","unmountOnExit","LogoWrapper","Logo","TitleWrapper","Form","form","InputWrapper","InputLabel","label","Input","input","SubmitButton","FindPasswordWrapper","FindPassword","FindAccountWrapper","FindAccount","hr","FacebookLoginWrapper","LoginModal","handleClose","cssClass","autoLoad","appId","fields","userInfo","console","log","icon","textButton","Login","LoginWrapper","SignupModal","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","client","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b01bacf.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Base = styled.footer`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n`\n\nconst Section = styled.section`\n  background-color: #1c1d1f;\n`;\n\nconst Statistics = styled.section`\n  background: #101113;\n  width: 100%;\n  height: 62px;\n  line-height: 62px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Summary = styled.span`\n  color: #d1d1d2;\n  font-size: 19px;\n  font-weight: 500;\n  line-height: 22px;\n  text-align: center;\n`;\n\nconst Emphasis = styled.em`\n  color: #ff0558;\n  font-size: 19px;\n  font-weight: 500;\n  line-height: 22px;\n`;\n\nconst Container = styled.section`\n  background: #1c1d1f;\n  padding: 20px 0 38px;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  margin: 0 60px;\n`;\n\nconst Left = styled.div``;\n\nconst TermsAndPolicy = styled.ul``;\n\nconst TermsAndPolicyItem = styled.li`\n  display: inline-block;\n  color: #a5a5a7;\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 22px;\n  vertical-align: top;\n  cursor: pointer;\n  &:not(:last-of-type) {\n    &:after {\n      content: \"\";\n      display: inline-block;\n      background: #848485;\n      vertical-align: top;\n      width: 1px;\n      height: 12px;\n      margin: 5px 8px 0;\n    }\n  }\n`;\n\nconst Right = styled.div``;\n\nconst Footer: React.FC = () => {\n\n return (\n   <Base>\n     <Section>\n       <Statistics>\n         <Summary>\n           지금까지&nbsp;\n           <Emphasis>\n             ★ 633,986,967 개의 평가가\n           </Emphasis>\n           &nbsp;쌓였어요.\n         </Summary>\n       </Statistics>\n       <Container>\n         <ContentWrapper>\n           <Left>\n             <TermsAndPolicy>\n               <TermsAndPolicyItem>서비스 이용약관</TermsAndPolicyItem>\n               <TermsAndPolicyItem>개인정보 처리방침</TermsAndPolicyItem>\n               <TermsAndPolicyItem>회사 안내</TermsAndPolicyItem>\n             </TermsAndPolicy>\n           </Left>\n           <Right />\n         </ContentWrapper>\n       </Container>\n     </Section>\n   </Base>\n )\n}\n\nexport default Footer;\n","import { atom } from 'recoil';\n\nexport const loginModalOpenState = atom<boolean>({\n  key: 'loginModalOpenState',\n  default: false\n});\n\nexport const signupModalOpenState = atom<boolean>({\n  key: 'signupModalOpenState',\n  default: false\n});\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: `${process.env.REACT_APP_API_HOST}/${process.env.REACT_APP_API_VERSION}`,\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n    language: 'ko-KR'\n  }\n});\n\nexport default axiosInstance;\n","import axiosInstance from './index';\n\nexport const latestApi = () => axiosInstance.get('/movie/latest');\n\nexport const upcomingApi = () => axiosInstance.get('/movie/upcoming');\n\nexport const nowPlayingApi = () => axiosInstance.get('/movie/now_playing');\n\nexport const topRatedApi = () => axiosInstance.get('/movie/top_rated');\n\nexport const popularApi = () => axiosInstance.get('/movie/popular');\n\nexport const detailApi = (movieId: string) => axiosInstance.get(`/movie/${movieId}`);\n\nexport const similarApi = (id: string) => axiosInstance.get(`/movie/${id}/similar`);\n\nexport const searchApi = (query: string) => axiosInstance.get(`/search/movie?query=${query}`);\n","import { useQuery } from 'react-query';\nimport { searchApi } from '../../apis/movieApi';\nimport { Movie, ListResponse } from '../../types';\nimport { AxiosError, AxiosResponse } from \"axios\";\n\nconst useMovieSearch = (query: string) => {\n  const queryFn = () => searchApi(query);\n  const { isLoading, isError, data } = useQuery<AxiosResponse<ListResponse<Movie>>, AxiosError>(['searchMovie', query], queryFn, { enabled: Boolean(query) })\n\n  return {\n    isLoading,\n    isError,\n    data: data?.data\n  }\n}\n\nexport default useMovieSearch;\n","import { RefObject, useEffect } from 'react';\n\nconst useOnClickOutside = (ref: RefObject<HTMLElement>, callback: (e: Event) => void) => {\n  useEffect(() => {\n    const listener = (e: Event) => {\n      if (!ref.current || ref.current?.contains(e.target as Node)) {\n        return;\n      }\n      callback(e);\n    }\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, callback]);\n}\n\nexport default useOnClickOutside;\n","import React, { useRef, useState } from 'react';\nimport styled from '@emotion/styled/macro';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { useRecoilState } from 'recoil';\n\nimport { loginModalOpenState, signupModalOpenState } from '../features/app/atom';\n\nimport useMovieSearch from '../features/movie/useMovieSearch';\nimport useClickOutside from '../hooks/useClickOutside';\n\nconst Base = styled.header`\n  width: 100%;\n  margin: 0 auto;\n  height: 62px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgb(255, 255, 255);\n  text-align: center;\n  box-shadow: rgb(0 0 0 / 8%) 0px 1px 0px 0px;\n  transition: background-color 200ms ease 0s;\n  z-index: 10;\n`;\n\nconst Navigation = styled.nav`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n\nconst MenuListWrapper = styled.div`\n`;\n\nconst MenuList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n`;\n\nconst Menu = styled.li`\n  display: flex;\n  align-items: center;\n  height: 62px;\n  flex-shrink: 0;\n  &:not(:first-child) {\n    margin: 0 0 0 24px;\n  }\n`;\n\nconst MenuButton = styled.button<{ active?: boolean }>`\n  font-size: 15px;\n  color: ${({ active }) => active ? 'rgb(53, 53, 53)' : 'rgb(126, 126, 126)'};\n  cursor: pointer;\n  border: none;\n  background: none;\n`;\n\nconst SearchMenu = styled.li`\n  width: 300px;\n  display: flex;\n  align-items: center;\n  height: 62px;\n  flex-shrink: 1;\n  margin: 0 0 0 auto;\n  transition: all 0.5s ease 0s;\n  position: relative;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\nconst TextLogo = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  > span[class=\"primary\"] {\n    color: rgb(255, 47, 110);\n  }\n  > span:not(.primary) {\n    color: #222;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst SearchResultWrapper = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 0;\n  z-index: 9999999;\n  background-color: #fff;\n  width: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  max-height: 480px;\n  overflow-y: scroll;\n`;\n\nconst SearchResultListItem = styled.li`\n  padding: 4px 6px;\n  box-sizing: border-box;\n  color: #222;\n  font-size: 16px;\n  width: 100%;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst SearchResultList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst SearchFormWrapper = styled.div``;\n\nconst SearchForm = styled.form``;\n\nconst SearchLabel = styled.label`\n  background: rgb(245, 245, 247);\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 38px;\n  border-radius: 2px;\n  padding: 7px 8px;\n`;\n\nconst SearchInput = styled.input`\n  font-size: 14px;\n  font-weight: 400;\n  background: transparent;\n  width: 100%;\n  padding: 0 0 0 8px;\n  border: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  caret-color: rgb(53, 53, 53);\n  line-height: 23px;\n`;\n\nconst SignIn = styled.button`\n  background: transparent;\n  color: rgb(116, 116, 123);\n  font-size: 14px;\n  padding: 0;\n  border: 0;\n  cursor: pointer;\n  margin: 15px 0;\n`;\n\nconst SignUp = styled.button`\n  border-radius: 6px;\n  font-weight: 500;\n  box-sizing: border-box;\n  min-width: 72px;\n  height: 32px;\n  background: transparent;\n  color: rgb(53, 53, 53);\n  font-size: 14px;\n  border: 1px solid rgba(116, 116, 123, 0.5);\n  cursor: pointer;\n  margin: 15px 0;\n`;\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  const searchRef = useRef<HTMLDivElement>(null);\n  const pathname = window.location.pathname;\n\n  const [searchKeyword, setSearchKeyword] = useState<string>('');\n\n  const [isLoginModalOpen, setIsLoginModalOpen] = useRecoilState(loginModalOpenState);\n  const [isSignupModalOpen, setIsSignupModalOpen] = useRecoilState(signupModalOpenState);\n\n  const handleLoginModal = (): void => {\n    !isLoginModalOpen && setIsLoginModalOpen(true);\n  }\n\n  const handleSignup = (): void => {\n    !isSignupModalOpen && setIsSignupModalOpen(true);\n  }\n\n  const handleKeyword = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearchKeyword(e.target.value);\n  }\n\n  useClickOutside(searchRef, () => setSearchKeyword(''));\n\n  const { data: searchResult } = useMovieSearch(searchKeyword);\n\n  return (\n    <Base>\n      <Navigation>\n        <MenuListWrapper>\n          <MenuList>\n            <Menu>\n              <Link href=\"/\">\n                <TextLogo>\n                  <span className=\"primary\">WATCHOUT</span>\n                  <span>PEDIA</span>\n                </TextLogo>\n              </Link>\n            </Menu>\n            <Menu>\n              <Link href=\"/\">\n                <MenuButton active={pathname === '/'}>영화</MenuButton>\n              </Link>\n            </Menu>\n            <Menu>\n              <Link href=\"/tv\">\n                <MenuButton active={pathname === '/tv'}>TV 프로그램</MenuButton>\n              </Link>\n            </Menu>\n            <SearchMenu>\n              <SearchContainer>\n                <SearchFormWrapper ref={searchRef}>\n                  <SearchForm>\n                    <SearchLabel>\n                      <AiOutlineSearch />\n                      <SearchInput\n                        placeholder=\"콘텐츠, 인물, 컬렉션, 유저를 검색해보세요.\"\n                        onChange={handleKeyword}\n                      />\n                    </SearchLabel>\n                  </SearchForm>\n                </SearchFormWrapper>\n              </SearchContainer>\n              <SearchResultWrapper>\n                <SearchResultList>\n                  {\n                    searchResult?.results.map((searchResultItem) => (\n                      <Link href={`/movie/${searchResultItem.id}`} key={searchResultItem.id}>\n                        <SearchResultListItem>{searchResultItem.title}</SearchResultListItem>\n                      </Link>\n                    ))\n                  }\n                </SearchResultList>\n              </SearchResultWrapper>\n            </SearchMenu>\n            <Menu>\n              <SignIn onClick={handleLoginModal}>로그인</SignIn>\n            </Menu>\n            <Menu>\n              <SignUp onClick={handleSignup}>회원가입</SignUp>\n            </Menu>\n          </MenuList>\n        </MenuListWrapper>\n      </Navigation>\n    </Base>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport ReactSlider, { Settings } from 'react-slick';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { MdArrowBackIos, MdArrowForwardIos } from 'react-icons/md';\n\ninterface Props {\n  settings?: Settings;\n}\n\nconst ArrowButton = styled.button<{ pos?: 'left' | 'right' }>`\n  padding: 16px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  z-index: 1;\n  top: 50%;\n  background-color: #fff;\n  ${({ pos }) => pos === 'left' ? css`left: 0; transform: translate(-50%, -50%)` : css`right: 0; transform: translate(50%, -50%)`};\n  &:before {\n    content: initial;\n  }\n  > svg {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    color: #222;\n  }\n`;\n\nconst DEFAULT_SETTINGS: Settings = {\n  dots: false,\n  arrows: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 5,\n  slidesToScroll: 5,\n  swipe: true,\n  draggable: true,\n  prevArrow: (\n    <ArrowButton pos=\"left\">\n      <MdArrowBackIos />\n    </ArrowButton>\n  ),\n  nextArrow: (\n    <ArrowButton pos=\"right\">\n      <MdArrowForwardIos />\n    </ArrowButton>\n  )\n};\n\nconst Slider: React.FC<Props> = ({ settings = DEFAULT_SETTINGS, children }) => (\n  <ReactSlider {...settings}>\n    {children}\n  </ReactSlider>\n)\n\nexport default Slider;\n","import { useQuery } from 'react-query';\nimport { upcomingApi } from '../../../apis/movieApi';\nimport { ListResponse, MovieDetail } from '../../../types';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nconst useLatestMovie = () => {\n  return useQuery<AxiosResponse<ListResponse<MovieDetail>>, AxiosError>('upcomingMovie', upcomingApi);\n}\n\nexport default useLatestMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { AiFillStar } from 'react-icons/ai';\n\ninterface Props {\n  linkUrl: string;\n  title: string;\n  year: string;\n  posterPath: string;\n  voteAverage: number;\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-inline: 10px;\n`;\n\nconst Base = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 100%;\n  height: 300px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 4px;\n`;\n\nconst Info = styled.div`\n  text-align: left;\n  width: 100%;\n`;\n\nconst Title = styled.h4`\n  color: #292a32;\n  font-size: 16px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 22px;\n  margin-bottom: 3px;\n  white-space: nowrap;\n  max-width: 200px;\n`;\n\nconst Keyword = styled.div`\n  color: #292a32;\n  padding-bottom: 1px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n`;\n\nconst Average = styled.div`\n  color: #74747b;\n  font-size: 13px;\n  font-weight: 400;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Card: React.FC<Props> = ({ linkUrl, title, posterPath, voteAverage, year }) => (\n  <StyledLink to={linkUrl}>\n    <Base>\n      <ImageWrapper>\n        <Image src={posterPath} alt={`${title} 의 포스터`} />\n      </ImageWrapper>\n      <Info>\n        <Title>{title}</Title>\n        <Keyword>{year}</Keyword>\n        <Average>\n          <span>\n            평균\n          </span>\n          <span>\n            &nbsp;<AiFillStar />\n          </span>\n          <span>\n            {voteAverage}\n          </span>\n        </Average>\n      </Info>\n    </Base>\n  </StyledLink>\n)\n\nexport default Card;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Slider from '../../../components/Slider';\nimport useUpcomingMovie from './useUpcomingMovie';\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n  position: relative;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst UpcomingMovieSection: React.FC = () => {\n  const { data: upcomingMovieResponse, isLoading } = useUpcomingMovie();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>개봉 예정작</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              upcomingMovieResponse?.data?.results.map(movie => (\n                <Card\n                  key={movie.id}\n                  linkUrl={`/movie/${movie.id}`}\n                  title={movie.title}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${movie.poster_path}`}\n                  voteAverage={movie.vote_average}\n                  year={getYear(movie.release_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default UpcomingMovieSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { latestApi } from '../../../apis/movieApi';\nimport { MovieDetail } from '../../../types';\n\nconst useLatestMovie = () => {\n  return useQuery<AxiosResponse<MovieDetail>, AxiosError>('latestMovie', latestApi);\n}\n\nexport default useLatestMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useLatestMovie from './useLatestMovie';\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst LatestMovieSection: React.FC = () => {\n  const { data: latestMovieResponse, isLoading } = useLatestMovie();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>최근 개봉작</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          latestMovieResponse?.data && (\n            <Card\n              key={latestMovieResponse.data.id}\n              linkUrl={`/movie/${latestMovieResponse.data.id}`}\n              title={latestMovieResponse.data.title}\n              posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${latestMovieResponse.data.poster_path}`}\n              voteAverage={latestMovieResponse.data.vote_average}\n              year={getYear(latestMovieResponse.data.release_date)}\n            />\n          )\n        )\n      }\n    </Base>\n  )\n}\n\nexport default LatestMovieSection;\n","import { useQuery } from 'react-query';\nimport { nowPlayingApi } from '../../../apis/movieApi';\nimport {AxiosError, AxiosResponse} from \"axios\";\nimport {MovieDetail, ListResponse} from \"../../../types\";\n\nconst useNowPlayingMovie = () => {\n  return useQuery<AxiosResponse<ListResponse<MovieDetail>>, AxiosError>('nowPlayingMovie', nowPlayingApi);\n}\n\nexport default useNowPlayingMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Slider from '../../../components/Slider';\nimport useNowPlayingMovie from './useNowPlayingMovie';\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst UpcomingMovieSection: React.FC = () => {\n  const { data: nowPlayingMovieResponse, isLoading } = useNowPlayingMovie();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>현재 상영중</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              nowPlayingMovieResponse?.data?.results.map(movie => (\n                <Card\n                  key={movie.id}\n                  linkUrl={`/movie/${movie.id}`}\n                  title={movie.title}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${movie.poster_path}`}\n                  voteAverage={movie.vote_average}\n                  year={getYear(movie.release_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default UpcomingMovieSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { popularApi } from '../../../apis/movieApi';\nimport { MovieDetail, ListResponse } from '../../../types';\n\nconst usePopularMovie = () => {\n  return useQuery<AxiosResponse<ListResponse<MovieDetail>>, AxiosError>('popularMovie', popularApi);\n}\n\nexport default usePopularMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Slider from '../../../components/Slider';\nimport usePopularMovie from './usePopularMovie';\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst PopularMovieSection: React.FC = () => {\n  const { data: popularMovieResponse, isLoading } = usePopularMovie();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>인기 상영작</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              popularMovieResponse?.data?.results.map(movie => (\n                <Card\n                  key={movie.id}\n                  linkUrl={`/movie/${movie.id}`}\n                  title={movie.title}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${movie.poster_path}`}\n                  voteAverage={movie.vote_average}\n                  year={getYear(movie.release_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default PopularMovieSection;\n","import { useQuery } from 'react-query';\nimport { topRatedApi } from '../../../apis/movieApi';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { ListResponse, MovieDetail } from '../../../types';\n\nconst useTopRateMovie = () => {\n  return useQuery<AxiosResponse<ListResponse<MovieDetail>>, AxiosError>('topRate', topRatedApi);\n}\n\nexport default useTopRateMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Slider from '../../../components/Slider';\nimport useTopRateMovie from './useTopRateMovie';\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst PopularMovieSection: React.FC = () => {\n  const { data: topRateMovieResponse, isLoading } = useTopRateMovie();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>최고 평점</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              topRateMovieResponse?.data?.results.map(movie => (\n                <Card\n                  key={movie.id}\n                  linkUrl={`/movie/${movie.id}`}\n                  title={movie.title}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${movie.poster_path}`}\n                  voteAverage={movie.vote_average}\n                  year={getYear(movie.release_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default PopularMovieSection;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport UpcomingMovieSection from '../features/movie/upcoming';\nimport LatestMovieSection from '../features/movie/latest';\nimport NowPlayingSection from '../features/movie/nowPlaying';\nimport PopularMovieSection from '../features/movie/popular';\nimport TopRateMovieSection from '../features/movie/topRate';\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Container = styled.div`\n  margin-top: 62px;\n  padding: 24px 0;\n`;\n\nconst MainPage: React.FC = () => (\n  <>\n    <Header />\n    <Main>\n      <Container>\n        <LatestMovieSection />\n        <UpcomingMovieSection />\n        <NowPlayingSection />\n        <PopularMovieSection />\n        <TopRateMovieSection />\n      </Container>\n    </Main>\n    <Footer />\n  </>\n)\n\nexport default MainPage;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { detailApi } from '../../apis/movieApi';\nimport { MovieDetail } from '../../types';\n\nconst useMovieDetail = (id: string) => {\n  const queryFn = () => detailApi(id);\n  const { isLoading, isError, data } = useQuery<AxiosResponse<MovieDetail>, AxiosError>(['movieDetail', id], queryFn);\n\n  return {\n    isLoading,\n    isError,\n    data: data?.data\n  }\n}\n\nexport default useMovieDetail;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ContentSection = styled.section`\n  padding: 11px 15px;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst ContentHeaderWrapper = styled.div``;\n\nconst ContentHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: #ff2f6e;\n`;\n\nconst ContentTitle = styled.h2`\n  color: #000;\n  font-size: 19px;\n  font-weight: 700;\n  margin: 8px 0;\n`;\n\nconst Summary = styled.div`\n  color: #4a4a4a;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nconst MoreSee = styled.div``;\n\ninterface Props {\n  title: string;\n  year: string;\n  genres: string;\n  runtime: number;\n  overview: string;\n}\n\nconst DefaultInfo: React.FC<Props> = ({ title, year, genres, runtime, overview }) => {\n  const hour = Math.ceil(runtime / 60);\n  const minute = runtime % 60;\n\n  return (\n    <ContentSection>\n      <ContentHeaderWrapper>\n        <ContentHeader>\n          <ContentTitle>기본 정보</ContentTitle>\n          <Link href=\"/overview\">\n            <MoreSee>더보기</MoreSee>\n          </Link>\n        </ContentHeader>\n        <Summary>\n          {title}\n          <br />\n          {year} ・ {genres}\n          <br />\n          {hour}시간 {minute}분\n          <br />\n          <br />\n          {overview}\n        </Summary>\n      </ContentHeaderWrapper>\n    </ContentSection>\n  )\n}\n\nexport default DefaultInfo;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { similarApi } from '../../apis/movieApi';\nimport { MovieDetail, ListResponse } from '../../types';\n\nconst useSimilarMovie = (id: string) => {\n  const { isLoading, isError, data } = useQuery<AxiosResponse<ListResponse<MovieDetail>>, AxiosError>(['movieSimilar', id], () => similarApi(id));\n\n  return {\n    isLoading,\n    isError,\n    data: data?.data\n  }\n}\n\nexport default useSimilarMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport useSimilarMovie from '../useMovieSimilar';\n\nconst Base = styled.section`\n  padding: 11px 15px;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst ContentHeaderWrapper = styled.div``;\n\nconst ContentHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ContentTitle = styled.h2`\n  color: #000;\n  font-size: 19px;\n  font-weight: 700;\n  margin: 8px 0;\n`;\n\nconst ContentsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-top: 15px;\n  row-gap: 24px;\n`;\n\nconst CardContainer = styled.div`\n  max-width: 140px;\n`;\n\nconst PosterWrapper = styled.div`\n  width: 140px;\n  height: 204px;\n  border: 1px solid rgb(234, 233, 232);\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  vertical-align: top;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  margin: 5px 10px 0px 0px;\n`;\n\nconst Title = styled.div`\n  color: rgb(41, 42, 50);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 22px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst VoteAverage = styled.div`\n  margin-top: 2px;\n  color: rgb(120, 120, 120);\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 18px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\ninterface Props {\n  id: string;\n}\n\ninterface MovieProps {\n  id: number;\n  posterPath: string;\n  title: string;\n  voteAverage: number;\n}\n\nconst Card: React.FC<MovieProps> = ({ id, posterPath, title, voteAverage }) => {\n  return (\n    <Link href={`/movie/${id}`} target=\"_blank\">\n      <CardContainer>\n        <PosterWrapper>\n          <Poster src={`${process.env.REACT_APP_IMAGE_PREFIX}/${posterPath}`} />\n        </PosterWrapper>\n        <Info>\n          <Title>{title}</Title>\n          <VoteAverage>평균 ★ {voteAverage}</VoteAverage>\n        </Info>\n      </CardContainer>\n    </Link>\n  )\n}\n\nconst Similar: React.FC<Props> = ({ id }) => {\n  const { isLoading, data } = useSimilarMovie(id);\n\n  return (\n    <Base>\n      <ContentHeaderWrapper>\n        <ContentHeader>\n          <ContentTitle>비슷한 작품</ContentTitle>\n        </ContentHeader>\n      </ContentHeaderWrapper>\n      <ContentsWrapper>\n        {\n          isLoading || !data ? (\n            <div>Loading...</div>\n          ) : (\n            data.results.map(result => (\n              <Card\n                id={result.id}\n                posterPath={result.poster_path}\n                title={result.title}\n                voteAverage={result.vote_average}\n              />\n            ))\n          )\n        }\n      </ContentsWrapper>\n    </Base>\n  )\n}\n\nexport default Similar;\n","import React, {useMemo} from 'react';\nimport styled from \"@emotion/styled\";\nimport { useParams } from 'react-router-dom';\nimport { AiOutlinePlus, AiFillEye } from 'react-icons/ai';\nimport { FaPen } from 'react-icons/fa';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport { Rating } from '@mui/material';\n\nimport useMovieDetail from '../features/movie/useMovieDetail';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport DefaultInfo from \"../features/movie/detail/DefaultInfo\";\nimport Similar from \"../features/movie/detail/Similar\";\n\nconst Base = styled.div`\n  position: relative;\n  background: #f8f8f8;\n`;\n\nconst TopInfo = styled.section`\n  border-bottom: 1px solid rgb(227, 227, 227);\n  background: rgb(255, 255, 255);\n`;\n\nconst PosterContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Backdrop = styled.div`\n  display: flex;\n  width: 100%;\n  height: 394px;\n  background-image: linear-gradient(-180deg, rgba(0, 0, 0, 0.35) 2%, rgba(0, 0, 0, 0.2) 70%, rgba(0, 0, 0, 0.5) 100%);\n  overflow: hidden;\n`;\n\nconst LeftBlur = styled.div`\n  flex: 1 1 0%;\n  background: rgb(178, 196, 229);\n`;\n\nconst RightBlur = styled.div`\n  flex: 1 1 0%;\n  background: rgb(184, 184, 184);\n`;\n\nconst LeftGradient = styled.div`\n  width: 150px;\n  display: block;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  background-image: linear-gradient(-90deg, rgba(178, 196, 229, 0) 0%, rgb(178, 196, 229) 100%);\n`;\n\nconst RightGradient = styled.div`\n  width: 150px;\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-image: linear-gradient(90deg, rgba(184, 184, 184, 0) 0%, rgb(184, 184, 184) 100%);\n`;\n\nconst BackdropImage = styled.div<{ imageUrl: string }>`\n  background: url(${({ imageUrl }) => imageUrl}) center center / cover no-repeat;\n  width: 1024px;\n  position: relative;\n  top: auto;\n  left: auto;\n  height: 100%;\n  filter: none;\n`;\n\nconst PosterWrapper = styled.div`\n  position: absolute;\n  width: 166px;\n  height: 238px;\n  border: solid 2px #fff;\n  top: -48px;\n  left: 0;\n  border-radius: 3px;\n  box-shadow: 0 0 2px rgb(0 0 0 / 30%);\n  background: #fff;\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Main = styled.div`\n  padding: 14px 16px 22px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  margin: 0px 0px 0px 191px;\n  text-align: left;\n`;\n\nconst Title = styled.h1`\n  font-size: 33px;\n  font-weight: 700;\n  line-height: 40px;\n`;\n\nconst Keyword = styled.div`\n  font-size: 17px;\n  font-weight: 400;\n  margin-top: 4px;\n  color: rgba(0,0,0,0.5);\n`;\n\nconst AverageRate = styled.div`\n  font-size: 17px;\n  font-weight: 400;\n  line-height: 22px;\n  padding: 8px 0;\n  margin-top: 14px;\n  border-top: 1px solid #ededed;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst Actions = styled.div`\n  margin-top: 20px;\n  height: 58px;\n  display: flex;\n  align-items: center;\n`;\n\nconst StarRate = styled.div`\n  width: 238px;\n  height: 57px;\n  margin: 0;\n  text-align: center;\n`;\n\nconst StarRateText = styled.div`\n  font-size: 12px;\n  line-height: 16px;\n  color: #787878;\n`;\n\nconst RatingWrapper = styled.div`\n  margin-top: 8px;\n`;\n\nconst Divider = styled.div`\n  width: 1px;\n  height: 100%;\n  background: #ededed;\n  float: left;\n`;\n\nconst ActionButtonContainer = styled.div`\n  width: 461px;\n  padding: 0 30px;\n  margin: 0 -16px;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActionButton = styled.button`\n  border: none;\n  background: transparent;\n  font-size: 14px;\n  margin: 0 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  > svg {\n    margin-right: 7px;\n    &:hover {\n      transform: scale(1.4);\n    }\n  }\n`;\n\nconst BottomInfo = styled.div`\n  padding: 28px 0 48px;\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst ContentSectionContainer = styled.div`\n  border-right: 1px solid;\n  border-left: 1px solid;\n  border-top: 1px solid;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  background: #fff;\n  border-color: #e3e3e3;\n`;\n\ntype Params = {\n  id: string;\n}\n\ninterface Props {}\n\nconst MovieDetail: React.FC<Props> = () => {\n  const { id } = useParams<Params>();\n\n  const { isLoading, data } = useMovieDetail(id);\n\n  const year = useMemo(() => data?.release_date.split('-')[0] || '', [data]);\n  const genres = useMemo(() => data?.genres.map(genre => genre.name).join('/') || '', [data]);\n\n  return (\n    <Base>\n      <Header />\n      {\n        isLoading || !data ? (<div>Loading...</div>) : (\n          <>\n            <TopInfo>\n\n              {/* 포스터 영역 */}\n\n              <PosterContainer>\n                <Backdrop>\n                  <LeftBlur />\n                  <BackdropImage imageUrl={`${process.env.REACT_APP_IMAGE_PREFIX}/${data.backdrop_path}`}>\n                    <LeftGradient />\n                    <RightGradient />\n                  </BackdropImage>\n                  <RightBlur />\n                </Backdrop>\n              </PosterContainer>\n\n              {/* 메인 */}\n\n              <Main>\n                <Container>\n                  <PosterWrapper>\n                    <Poster src={`${process.env.REACT_APP_IMAGE_PREFIX}/${data.poster_path}`} />\n                  </PosterWrapper>\n                  <ContentWrapper>\n\n                    {/* 기본정보 */}\n\n                    <Title>{data.title}</Title>\n                    <Keyword>{year} ・ {genres}</Keyword>\n                    <AverageRate>평균 ★{data.vote_average} ({data.vote_count}명)</AverageRate>\n                    <Actions>\n                      <StarRate>\n                        <StarRateText>평가하기</StarRateText>\n                        <RatingWrapper>\n                          <Rating size=\"large\" />\n                        </RatingWrapper>\n                      </StarRate>\n                      <Divider />\n\n                      {/* 액션 버튼 */}\n\n                      <ActionButtonContainer>\n                        <ActionButton>\n                          <AiOutlinePlus />보고싶어요\n                        </ActionButton>\n                        <ActionButton>\n                          <FaPen />코멘트\n                        </ActionButton>\n                        <ActionButton>\n                          <AiFillEye />보는중\n                        </ActionButton>\n                        <ActionButton>\n                          <FiMoreHorizontal />더보기\n                        </ActionButton>\n                      </ActionButtonContainer>\n                    </Actions>\n                  </ContentWrapper>\n                </Container>\n              </Main>\n            </TopInfo>\n\n            {/* 상세 정보 */}\n\n\n            <BottomInfo>\n              <ContentSectionContainer>\n                <DefaultInfo title={data.title} year={year} genres={genres} runtime={data.runtime} overview={data.overview} />\n                <Similar id={id} />\n              </ContentSectionContainer>\n            </BottomInfo>\n          </>\n        )\n      }\n      <Footer />\n    </Base>\n  )\n}\n\nexport default MovieDetail;\n","import axiosInstance from './index';\n\nexport const latestApi = () => axiosInstance.get('/tv/latest');\n\nexport const airingTodayApi = () => axiosInstance.get('/tv/airing_today');\n\nexport const onTheAirApi = () => axiosInstance.get('/tv/on_the_air');\n\nexport const popularApi = () => axiosInstance.get('/tv/popular');\n\nexport const topRatedApi = () => axiosInstance.get('/tv/top_rated');\n\nexport const detailApi = (id: string) => axiosInstance.get(`/tv/${id}`);\n\nexport const similarApi = (id: string) => axiosInstance.get(`/tv/${id}/similar`);\n\nexport const searchApi = (query: string) => axiosInstance.get(`/search/tv?query=${query}`);\n","import { useQuery } from 'react-query';\nimport { AxiosResponse } from 'axios';\n\nimport { airingTodayApi } from '../../../apis/tvApi';\nimport {TVDetail, ListResponse} from \"../../../types\";\n\nconst useAiringTodayTv = () => {\n  return useQuery<AxiosResponse<ListResponse<TVDetail>>>('airingTodayTv', airingTodayApi);\n}\n\nexport default useAiringTodayTv;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useAiringTodayTv from './useAiringTodayTv';\nimport Card from '../../../components/Card';\nimport Slider from '../../../components/Slider';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst AiringTodayTvSection: React.FC = () => {\n  const { data: airingTodayTvResponse, isLoading } = useAiringTodayTv();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>Airing Today</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              airingTodayTvResponse?.data?.results.map(tv => (\n                <Card\n                  key={tv.id}\n                  linkUrl={`/tv/${tv.id}`}\n                  title={tv.name}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${tv.poster_path}`}\n                  voteAverage={tv.vote_average}\n                  year={getYear(tv.first_air_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default AiringTodayTvSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { onTheAirApi } from '../../../apis/tvApi';\nimport { TVDetail, ListResponse } from '../../../types';\n\nconst useOnTheAirTv = () => {\n  return useQuery<AxiosResponse<ListResponse<TVDetail>>, AxiosError>('onTheAirTv', onTheAirApi);\n}\n\nexport default useOnTheAirTv;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useOnTheAirTv from './useOnTheAirTv';\nimport Card from '../../../components/Card';\nimport Slider from '../../../components/Slider';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst OnTheAirTvSection: React.FC = () => {\n  const { data: onTheAirTvResponse, isLoading } = useOnTheAirTv();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>실시간</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              onTheAirTvResponse?.data?.results.map(tv => (\n                <Card\n                  key={tv.id}\n                  linkUrl={`/tv/${tv.id}`}\n                  title={tv.name}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${tv.poster_path}`}\n                  voteAverage={tv.vote_average}\n                  year={getYear(tv.first_air_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default OnTheAirTvSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { latestApi } from '../../../apis/tvApi';\nimport { TVDetail } from '../../../types';\n\nconst useLatestMovie = () => {\n  return useQuery<AxiosResponse<TVDetail>, AxiosError>('latestTv', latestApi);\n}\n\nexport default useLatestMovie;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useLatestTv from './useLatestTv';\n\nimport Card from '../../../components/Card';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst LatestTvSection: React.FC = () => {\n  const { data: latestTvResponse, isLoading } = useLatestTv();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>최근 개봉작</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          latestTvResponse?.data && (\n            <Card\n              key={latestTvResponse.data.id}\n              linkUrl={`/tv/${latestTvResponse.data.id}`}\n              title={latestTvResponse.data.name}\n              posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${latestTvResponse.data.poster_path}`}\n              voteAverage={latestTvResponse.data.vote_average}\n              year={getYear(latestTvResponse.data.first_air_date)}\n            />\n          )\n        )\n      }\n    </Base>\n  )\n}\n\nexport default LatestTvSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { popularApi } from '../../../apis/tvApi';\nimport {ListResponse, TVDetail} from \"../../../types\";\n\nconst usePopularTv = () => {\n  return useQuery<AxiosResponse<ListResponse<TVDetail>>, AxiosError>('popularTv', popularApi);\n}\n\nexport default usePopularTv;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport usePopularTv from './usePopularTv';\nimport Card from '../../../components/Card';\nimport Slider from '../../../components/Slider';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst PopularTvSection: React.FC = () => {\n  const { data: popularTvResponse, isLoading } = usePopularTv();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>인기 프로그램</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              popularTvResponse?.data?.results.map(tv => (\n                <Card\n                  key={tv.id}\n                  linkUrl={`/tv/${tv.id}`}\n                  title={tv.name}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${tv.poster_path}`}\n                  voteAverage={tv.vote_average}\n                  year={getYear(tv.first_air_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default PopularTvSection;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { topRatedApi } from '../../../apis/tvApi';\nimport { ListResponse, TVDetail } from '../../../types';\n\nconst useTopRateTv = () => {\n  return useQuery<AxiosResponse<ListResponse<TVDetail>>, AxiosError>('topRateTv', topRatedApi);\n}\n\nexport default useTopRateTv;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useTopRateTv from './useTopRateTv';\nimport Card from '../../../components/Card';\nimport Slider from '../../../components/Slider';\n\nconst Base = styled.div`\n  margin-bottom: 42px;\n`;\n\nconst Title = styled.h4`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 30px;\n  padding: 12px 0 14px;\n`;\n\nconst TopRateTvSection: React.FC = () => {\n  const { data: popularTvResponse, isLoading } = useTopRateTv();\n\n  const getYear = (release_date: string) => release_date.split('-')[0] || '';\n\n  return (\n    <Base>\n      <Title>인기 상영작</Title>\n      {\n        isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <Slider>\n            {\n              popularTvResponse?.data?.results.map(tv => (\n                <Card\n                  key={tv.id}\n                  linkUrl={`/tv/${tv.id}`}\n                  title={tv.name}\n                  posterPath={`${process.env.REACT_APP_IMAGE_PREFIX}/${tv.poster_path}`}\n                  voteAverage={tv.vote_average}\n                  year={getYear(tv.first_air_date)}\n                />\n              ))\n            }\n          </Slider>\n        )\n      }\n    </Base>\n  )\n}\n\nexport default TopRateTvSection;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport AiringTodayTvSection from '../features/tv/airingToday';\nimport OnTheAirTvSection from '../features/tv/onTheAir';\nimport LatestTvSection from '../features/tv/latest';\nimport PopularTvSection from '../features/tv/popular';\nimport TopRateTvSection from '../features/tv/topRate';\n\nconst Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Container = styled.div`\n  margin-top: 62px;\n  padding: 48px 0;\n`;\n\nconst TvPage: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Main>\n        <Container>\n          <LatestTvSection />\n          <AiringTodayTvSection />\n          <OnTheAirTvSection />\n          <PopularTvSection />\n          <TopRateTvSection />\n        </Container>\n      </Main>\n      <Footer />\n    </>\n  )\n}\n\nexport default TvPage;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { detailApi } from '../../apis/tvApi';\nimport { TVDetail } from '../../types';\n\nconst useTvDetail = (id: string) => {\n  const queryFn = () => detailApi(id);\n  const { isLoading, isError, data } = useQuery<AxiosResponse<TVDetail>, AxiosError>(['tvDetail', id], queryFn);\n\n  return {\n    isLoading,\n    isError,\n    data: data?.data\n  }\n}\n\nexport default useTvDetail;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ContentSection = styled.section`\n  padding: 11px 15px;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst ContentHeaderWrapper = styled.div``;\n\nconst ContentHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: #ff2f6e;\n`;\n\nconst ContentTitle = styled.h2`\n  color: #000;\n  font-size: 19px;\n  font-weight: 700;\n  margin: 8px 0;\n`;\n\nconst Summary = styled.div`\n  color: #4a4a4a;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nconst MoreSee = styled.div``;\n\ninterface Props {\n  title: string;\n  year: string;\n  genres: string;\n  overview: string;\n}\n\nconst DefaultInfo: React.FC<Props> = ({ title, year, genres, overview }) => {\n  return (\n    <ContentSection>\n      <ContentHeaderWrapper>\n        <ContentHeader>\n          <ContentTitle>기본 정보</ContentTitle>\n          <Link href=\"/overview\">\n            <MoreSee>더보기</MoreSee>\n          </Link>\n        </ContentHeader>\n        <Summary>\n          {title}\n          <br />\n          {year} ・ {genres}\n          <br />\n          <br />\n          {overview}\n        </Summary>\n      </ContentHeaderWrapper>\n    </ContentSection>\n  )\n}\n\nexport default DefaultInfo;\n","import { useQuery } from 'react-query';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nimport { similarApi } from '../../apis/tvApi';\nimport {ListResponse, TVDetail} from '../../types';\n\nconst useSimilarTv = (id: string) => {\n  const { isLoading, isError, data } = useQuery<AxiosResponse<ListResponse<TVDetail>>, AxiosError>(['movieSimilar', id], () => similarApi(id));\n\n  return {\n    isLoading,\n    isError,\n    data: data?.data\n  }\n}\n\nexport default useSimilarTv;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport useTvSimilar from '../useTvSimilar';\n\nconst Base = styled.section`\n  padding: 11px 15px;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst ContentHeaderWrapper = styled.div``;\n\nconst ContentHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ContentTitle = styled.h2`\n  color: #000;\n  font-size: 19px;\n  font-weight: 700;\n  margin: 8px 0;\n`;\n\nconst ContentsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-top: 15px;\n  row-gap: 24px;\n`;\n\nconst CardContainer = styled.div`\n  max-width: 140px;\n`;\n\nconst PosterWrapper = styled.div`\n  width: 140px;\n  height: 204px;\n  border: 1px solid rgb(234, 233, 232);\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  vertical-align: top;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  margin: 5px 10px 0px 0px;\n`;\n\nconst Title = styled.div`\n  color: rgb(41, 42, 50);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 22px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst VoteAverage = styled.div`\n  margin-top: 2px;\n  color: rgb(120, 120, 120);\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 18px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\ninterface Props {\n  id: string;\n}\n\ninterface MovieProps {\n  id: number;\n  posterPath: string;\n  title: string;\n  voteAverage: number;\n}\n\nconst Card: React.FC<MovieProps> = ({ id, posterPath, title, voteAverage }) => {\n  return (\n    <Link href={`/tv/${id}`} target=\"_blank\">\n      <CardContainer>\n        <PosterWrapper>\n          <Poster src={`${process.env.REACT_APP_IMAGE_PREFIX}/${posterPath}`} />\n        </PosterWrapper>\n        <Info>\n          <Title>{title}</Title>\n          <VoteAverage>평균 ★ {voteAverage}</VoteAverage>\n        </Info>\n      </CardContainer>\n    </Link>\n  )\n}\n\nconst Similar: React.FC<Props> = ({ id }) => {\n  const { isLoading, data } = useTvSimilar(id);\n\n  return (\n    <Base>\n      <ContentHeaderWrapper>\n        <ContentHeader>\n          <ContentTitle>비슷한 작품</ContentTitle>\n        </ContentHeader>\n      </ContentHeaderWrapper>\n      <ContentsWrapper>\n        {\n          isLoading || !data ? (\n            <div>Loading...</div>\n          ) : (\n            data.results.map(result => (\n              <Card\n                id={result.id}\n                posterPath={result.poster_path}\n                title={result.name}\n                voteAverage={result.vote_average}\n              />\n            ))\n          )\n        }\n      </ContentsWrapper>\n    </Base>\n  )\n}\n\nexport default Similar;\n","import React, { useMemo } from 'react';\nimport { Rating } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { AiFillEye, AiOutlinePlus } from 'react-icons/ai';\nimport { FaPen } from 'react-icons/fa';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport styled from '@emotion/styled';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport useTvDetail from '../features/tv/useTvDetail';\n\nimport DefaultInfo from '../features/tv/detail/DefaultInfo';\nimport Similar from '../features/tv/detail/Similar';\n\nconst Base = styled.div`\n  position: relative;\n  background: #f8f8f8;\n`;\n\nconst TopInfo = styled.section`\n  border-bottom: 1px solid rgb(227, 227, 227);\n  background: rgb(255, 255, 255);\n`;\n\nconst PosterContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Backdrop = styled.div`\n  display: flex;\n  width: 100%;\n  height: 394px;\n  background-image: linear-gradient(-180deg, rgba(0, 0, 0, 0.35) 2%, rgba(0, 0, 0, 0.2) 70%, rgba(0, 0, 0, 0.5) 100%);\n  overflow: hidden;\n`;\n\nconst LeftBlur = styled.div`\n  flex: 1 1 0%;\n  background: rgb(178, 196, 229);\n`;\n\nconst RightBlur = styled.div`\n  flex: 1 1 0%;\n  background: rgb(184, 184, 184);\n`;\n\nconst LeftGradient = styled.div`\n  width: 150px;\n  display: block;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  background-image: linear-gradient(-90deg, rgba(178, 196, 229, 0) 0%, rgb(178, 196, 229) 100%);\n`;\n\nconst RightGradient = styled.div`\n  width: 150px;\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-image: linear-gradient(90deg, rgba(184, 184, 184, 0) 0%, rgb(184, 184, 184) 100%);\n`;\n\nconst BackdropImage = styled.div<{ imageUrl: string }>`\n  background: url(${({ imageUrl }) => imageUrl}) center center / cover no-repeat;\n  width: 1024px;\n  position: relative;\n  top: auto;\n  left: auto;\n  height: 100%;\n  filter: none;\n`;\n\nconst PosterWrapper = styled.div`\n  position: absolute;\n  width: 166px;\n  height: 238px;\n  border: solid 2px #fff;\n  top: -48px;\n  left: 0;\n  border-radius: 3px;\n  box-shadow: 0 0 2px rgb(0 0 0 / 30%);\n  background: #fff;\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Main = styled.div`\n  padding: 14px 16px 22px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  margin: 0px 0px 0px 191px;\n  text-align: left;\n`;\n\nconst Title = styled.h1`\n  font-size: 33px;\n  font-weight: 700;\n  line-height: 40px;\n`;\n\nconst Keyword = styled.div`\n  font-size: 17px;\n  font-weight: 400;\n  margin-top: 4px;\n  color: rgba(0,0,0,0.5);\n`;\n\nconst AverageRate = styled.div`\n  font-size: 17px;\n  font-weight: 400;\n  line-height: 22px;\n  padding: 8px 0;\n  margin-top: 14px;\n  border-top: 1px solid #ededed;\n  border-bottom: 1px solid #ededed;\n`;\n\nconst Actions = styled.div`\n  margin-top: 20px;\n  height: 58px;\n  display: flex;\n  align-items: center;\n`;\n\nconst StarRate = styled.div`\n  width: 238px;\n  height: 57px;\n  margin: 0;\n  text-align: center;\n`;\n\nconst StarRateText = styled.div`\n  font-size: 12px;\n  line-height: 16px;\n  color: #787878;\n`;\n\nconst RatingWrapper = styled.div`\n  margin-top: 8px;\n`;\n\nconst Divider = styled.div`\n  width: 1px;\n  height: 100%;\n  background: #ededed;\n  float: left;\n`;\n\nconst ActionButtonContainer = styled.div`\n  width: 461px;\n  padding: 0 30px;\n  margin: 0 -16px;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActionButton = styled.button`\n  border: none;\n  background: transparent;\n  font-size: 14px;\n  margin: 0 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  > svg {\n    margin-right: 7px;\n    &:hover {\n      transform: scale(1.4);\n    }\n  }\n`;\n\nconst BottomInfo = styled.div`\n  padding: 28px 0 48px;\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst ContentSectionContainer = styled.div`\n  border-right: 1px solid;\n  border-left: 1px solid;\n  border-top: 1px solid;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  background: #fff;\n  border-color: #e3e3e3;\n`;\n\n\ntype Params = {\n  id: string;\n}\n\nconst TvDetail: React.FC = () => {\n  const { id } = useParams<Params>();\n\n  const { isLoading, data } = useTvDetail(id);\n\n  const year = useMemo(() => data?.first_air_date.split('-')[0] || '', [data]);\n  const genres = useMemo(() => data?.genres.map(genre => genre.name).join('/') || '', [data]);\n\n  return (\n    <Base>\n      <Header />\n      {\n        isLoading || !data ? (\n          <div>Loading...</div>\n        ) : (\n          <>\n            <TopInfo>\n              <PosterContainer>\n                <Backdrop>\n                  <LeftBlur />\n                  <BackdropImage imageUrl={`${process.env.REACT_APP_IMAGE_PREFIX}/${data.backdrop_path}`}>\n                    <LeftGradient />\n                    <RightGradient />\n                  </BackdropImage>\n                  <RightBlur />\n                </Backdrop>\n              </PosterContainer>\n              <Main>\n                <Container>\n                  <PosterWrapper>\n                    <Poster src={`${process.env.REACT_APP_IMAGE_PREFIX}/${data.poster_path}`} />\n                  </PosterWrapper>\n                  <ContentWrapper>\n                    <Title>{data.name}</Title>\n                    <Keyword>{year} ・ {genres}</Keyword>\n                    <AverageRate>평균 ★{data.vote_average} ({data.vote_count}명)</AverageRate>\n                    <Actions>\n                      <StarRate>\n                        <StarRateText>평가하기</StarRateText>\n                        <RatingWrapper>\n                          <Rating size=\"large\" />\n                        </RatingWrapper>\n                      </StarRate>\n                      <Divider />\n                      <ActionButtonContainer>\n                        <ActionButton>\n                          <AiOutlinePlus />보고싶어요\n                        </ActionButton>\n                        <ActionButton>\n                          <FaPen />코멘트\n                        </ActionButton>\n                        <ActionButton>\n                          <AiFillEye />보는중\n                        </ActionButton>\n                        <ActionButton>\n                          <FiMoreHorizontal />더보기\n                        </ActionButton>\n                      </ActionButtonContainer>\n                    </Actions>\n                  </ContentWrapper>\n                </Container>\n              </Main>\n            </TopInfo>\n            <BottomInfo>\n              <ContentSectionContainer>\n                <DefaultInfo title={data.name} year={year} genres={genres} overview={data.overview} />\n                <Similar id={id} />\n              </ContentSectionContainer>\n            </BottomInfo>\n          </>\n        )\n      }\n      <Footer />\n    </Base>\n  )\n}\n\nexport default TvDetail;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface Props {\n  selector?: string;\n}\n\nconst Portal: React.FC<Props> = ({ children, selector }) => {\n  const rootElement = selector && document.querySelector(selector);\n\n  return (\n    <>\n      {rootElement ? createPortal(children, rootElement) : children}\n    </>\n  )\n}\n\nexport default Portal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Portal from './Portal';\n\ninterface Props {\n  isOpen: boolean;\n  selector?: string;\n  onClose: () => void;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Dim = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n`;\n\nconst Container = styled.div`\n  max-width: 456px;\n  position: relative;\n  width: 100%;\n  z-index: 100;\n`;\n\nconst Modal: React.FC<Props> = ({ children, isOpen, onClose, selector = '#modal-root' }) =>\n  <CSSTransition in={isOpen} timeout={300} classNames=\"modal\" unmountOnExit>\n    <Portal selector={selector}>\n      <Overlay>\n        <Dim onClick={onClose} />\n        <Container>{children}</Container>\n      </Overlay>\n    </Portal>\n  </CSSTransition>\n\nexport default Modal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport FacebookLogin, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { useRecoilState } from 'recoil';\n\nimport Modal from '../../components/Modal';\nimport { loginModalOpenState, signupModalOpenState } from './atom';\n\nconst Container = styled.div`\n  width: 375px;\n  min-height: 540px;\n  height: auto;\n  border-radius: 6px;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 32px 20px 48px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LogoWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Logo = styled.img``;\n\nconst TitleWrapper = styled.div`\n  margin: 24px 0 20px;\n`;\n\nconst Title = styled.h4`\n  font-size: 17px;\n  font-weight: 700;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Section = styled.section``;\n\nconst Form = styled.form``;\n\nconst InputWrapper = styled.div`\n  padding: 4px 0;\n  overflow: hidden;\n`;\n\nconst InputLabel = styled.label`\n  display: flex;\n  align-items: center;\n  background-color: rgb(245, 245, 245);\n  width: 100%;\n  box-sizing: border-box;\n  height: 44px;\n  padding: 0 12px;\n  border-radius: 6px;\n`;\n\nconst Input = styled.input`\n  background: transparent;\n  font-size: 16px;\n  font-weight: 400;\n  width: 100%;\n  padding: 0;\n  border: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  caret-color: rgb(255, 47, 110);\n`;\n\nconst SubmitButton = styled.button`\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  background: rgb(255, 47, 110);\n  color: rgb(255, 255, 255);\n  text-align: center;\n  font-size: 17px;\n  font-weight: 400;\n  width: 100%;\n  height: 44px;\n  border-radius: 6px;\n  margin-top: 16px;\n`;\n\nconst FindPasswordWrapper = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n  text-align: center;\n  margin: 20px 0 14px;\n`;\n\nconst FindPassword = styled.button`\n  background: none;\n  padding: 0;\n  border: none;\n  margin: 0;\n  cursor: pointer;\n  color: rgb(255, 47, 110);\n  font-size: inherit;\n`;\n\nconst FindAccountWrapper = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n  text-align: center;\n  color: rgb(140, 140, 140);\n`;\n\nconst FindAccount = styled.button`\n  background: none;\n  padding: 0;\n  border: none;\n  margin: 0;\n  cursor: pointer;\n  color: rgb(255, 47, 110);\n  font-size: inherit;\n`;\n\nconst Divider = styled.hr`\n  position: relative;\n  color: black;\n  text-align: center;\n  height: 1.5em;\n  border: 0;\n  outline: 0;\n  margin: 24px 0;\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    border-top: 1px solid rgb(216, 216, 216);\n  }\n  &:after {\n    content: \"OR\";\n    display: inline-block;\n    position: relative;\n    top: -2px;\n    background-color: rgb(255, 255, 255);\n    color: rgb(160, 160, 160);\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: -0.3px;\n    line-height: 19px;\n    vertical-align: middle;\n    padding: 5px 14px;\n  }\n`;\n\nconst FacebookLoginWrapper = styled.div`\n  width: 100%;\n`;\n\ninterface Props {}\n\nconst LoginModal: React.FC<Props> = () => {\n  const [isLoginModalOpen, setIsLoginModalOpen] = useRecoilState(loginModalOpenState);\n  const [isSignupModalOpen, setIsSignupModalOpen] = useRecoilState(signupModalOpenState);\n\n  const responseFacebook = (userInfo: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n    console.log(userInfo);\n  }\n\n  const handleClose =  (): void => {\n    setIsLoginModalOpen(false);\n  }\n\n  const handleSignup = (): void => {\n    handleClose();\n    !isSignupModalOpen && setIsSignupModalOpen(true);\n  }\n\n  return (\n    <Modal isOpen={isLoginModalOpen} onClose={handleClose}>\n      <Container>\n        <ContentWrapper>\n          <LogoWrapper>\n            <Logo src=\"/logo.png\" />\n          </LogoWrapper>\n          <TitleWrapper>\n            <Title>로그인</Title>\n          </TitleWrapper>\n          <Section>\n            <Form>\n              <InputWrapper>\n                <InputLabel>\n                  <Input placeholder=\"이메일\" />\n                </InputLabel>\n              </InputWrapper>\n              <InputWrapper>\n                <InputLabel>\n                  <Input placeholder=\"비밀번호\" />\n                </InputLabel>\n              </InputWrapper>\n              <SubmitButton>\n                로그인\n              </SubmitButton>\n            </Form>\n            <FindPasswordWrapper>\n              <FindPassword>비밀번호를 잊어버리셨나요?</FindPassword>\n            </FindPasswordWrapper>\n            <FindAccountWrapper>\n              계정이 없으신가요 ? <FindAccount onClick={handleSignup}>회원가입</FindAccount>\n            </FindAccountWrapper>\n            <Divider />\n            <FacebookLoginWrapper>\n              <FacebookLogin\n                cssClass=\"my-facebook-button-class\"\n                autoLoad\n                appId={''}\n                fields=\"name,email,picture\"\n                callback={responseFacebook}\n                icon=\"fa-facebook\"\n                textButton=\"Facebook 으로 로그인\"\n              />\n            </FacebookLoginWrapper>\n          </Section>\n        </ContentWrapper>\n      </Container>\n    </Modal>\n  )\n}\n\nexport default LoginModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Modal from '../../components/Modal';\nimport FacebookLogin, {ReactFacebookFailureResponse, ReactFacebookLoginInfo} from 'react-facebook-login';\nimport { useRecoilState } from 'recoil';\nimport { loginModalOpenState, signupModalOpenState } from './atom';\n\nconst Container = styled.div`\n  width: 375px;\n  min-height: 540px;\n  height: auto;\n  border-radius: 6px;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 32px 20px 48px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LogoWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Logo = styled.img``;\n\nconst TitleWrapper = styled.div`\n  margin: 24px 0 20px;\n`;\n\nconst Title = styled.h4`\n  font-size: 17px;\n  font-weight: 700;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Section = styled.section``;\n\nconst Form = styled.form``;\n\nconst InputWrapper = styled.div`\n  padding: 4px 0;\n  overflow: hidden;\n`;\n\nconst InputLabel = styled.label`\n  display: flex;\n  align-items: center;\n  background-color: rgb(245, 245, 245);\n  width: 100%;\n  box-sizing: border-box;\n  height: 44px;\n  padding: 0 12px;\n  border-radius: 6px;\n`;\n\nconst Input = styled.input`\n  background: transparent;\n  font-size: 16px;\n  font-weight: 400;\n  width: 100%;\n  padding: 0;\n  border: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  caret-color: rgb(255, 47, 110);\n`;\n\nconst SubmitButton = styled.button`\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  background: rgb(255, 47, 110);\n  color: rgb(255, 255, 255);\n  text-align: center;\n  font-size: 17px;\n  font-weight: 400;\n  width: 100%;\n  height: 44px;\n  border-radius: 6px;\n  margin-top: 16px;\n`;\n\nconst Login = styled.button`\n  background: none;\n  padding: 0;\n  border: none;\n  margin: 0;\n  cursor: pointer;\n  color: rgb(255, 47, 110);\n  font-size: inherit;\n`;\n\nconst LoginWrapper = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n  text-align: center;\n  color: rgb(140, 140, 140);\n  margin-top: 20px;\n`;\n\nconst Divider = styled.hr`\n  position: relative;\n  color: black;\n  text-align: center;\n  height: 1.5em;\n  border: 0;\n  outline: 0;\n  margin: 24px 0;\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    border-top: 1px solid rgb(216, 216, 216);\n  }\n  &:after {\n    content: \"OR\";\n    display: inline-block;\n    position: relative;\n    top: -2px;\n    background-color: rgb(255, 255, 255);\n    color: rgb(160, 160, 160);\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: -0.3px;\n    line-height: 19px;\n    vertical-align: middle;\n    padding: 5px 14px;\n  }\n`;\n\nconst FacebookLoginWrapper = styled.div`\n  width: 100%;\n`;\n\ninterface Props {}\n\nconst SignupModal: React.FC<Props> = () => {\n  const [isLoginModalOpen, setIsLoginModalOpen] = useRecoilState(loginModalOpenState);\n  const [isSignupModalOpen, setIsSignupModalOpen] = useRecoilState(signupModalOpenState);\n\n  const responseFacebook = (userInfo: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n    console.log(userInfo);\n  }\n\n  const handleClose = (): void => {\n    setIsSignupModalOpen(false);\n  }\n\n  const handleLogin = (): void => {\n    handleClose();\n    !isLoginModalOpen && setIsLoginModalOpen(true);\n  }\n\n  return (\n    <Modal isOpen={isSignupModalOpen} onClose={handleClose}>\n      <Container>\n        <ContentWrapper>\n          <LogoWrapper>\n            <Logo src=\"/logo.png\" />\n          </LogoWrapper>\n          <TitleWrapper>\n            <Title>회원가입</Title>\n          </TitleWrapper>\n          <Section>\n            <Form>\n              <InputWrapper>\n                <InputLabel>\n                  <Input placeholder=\"이름\" />\n                </InputLabel>\n              </InputWrapper>\n              <InputWrapper>\n                <InputLabel>\n                  <Input placeholder=\"이메일\" />\n                </InputLabel>\n              </InputWrapper>\n              <InputWrapper>\n                <InputLabel>\n                  <Input placeholder=\"비밀번호\" />\n                </InputLabel>\n              </InputWrapper>\n              <SubmitButton>\n                회원가입\n              </SubmitButton>\n            </Form>\n            <LoginWrapper>\n              이미 가입하셨나요? <Login onClick={handleLogin}>로그인</Login>\n            </LoginWrapper>\n            <Divider />\n            <FacebookLoginWrapper>\n              <FacebookLogin\n                cssClass=\"my-facebook-button-class\"\n                autoLoad\n                appId={''}\n                fields=\"name,email,picture\"\n                callback={responseFacebook}\n                icon=\"fa-facebook\"\n                textButton=\"Facebook 으로 로그인\"\n              />\n            </FacebookLoginWrapper>\n          </Section>\n        </ContentWrapper>\n      </Container>\n    </Modal>\n  )\n}\n\nexport default SignupModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport MainPage from './pages/MainPage';\nimport MovieDetail from './pages/MovieDetail';\nimport TvPage from './pages/TvPage';\nimport TvDetail from './pages/TvDetail';\n\nimport LoginModal from './features/app/LoginModal';\nimport SignupModal from './features/app/SignupModal';\n\nconst Base = styled.div``;\n\nfunction App() {\n  return (\n    <Base>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/tv\" component={TvPage} />\n          <Route exact path=\"/movie/:id\" component={MovieDetail} />\n          <Route exact path=\"/tv/:id\" component={TvDetail} />\n        </Switch>\n      </Router>\n      <LoginModal />\n      <SignupModal />\n    </Base>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'reset-css';\nimport './index.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </RecoilRoot>\n    </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}